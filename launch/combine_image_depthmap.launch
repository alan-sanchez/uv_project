<launch>

<!-- Start image filter node -->
  <node pkg="uv_project" type="image_filter.py" name="image_filter" output="screen"/>

<!-- Launch the depth_image_proc nodelet manager -->
  <node pkg="nodelet" type="nodelet" name="nodelet_manager" args="manager" />

<!-- Start the camerat tf broacaster node -->
  <node pkg="uv_project" type="camera_tf_broadcaster.py" name="camera_tf_broadcaster" output="screen"/>

<!-- Start the transform pointcloud node -->
  <node pkg="uv_project" type="transform_pcl.py" name="transform_pcl" output="screen"/>

<!-- Launch realsense camera rgbd file -->
  <include file="$(find realsense2_camera)/launch/rs_rgbd.launch" >
    <!--
	      LOWEST RESOLUTION, but also has the lowest minimum depth
	      (105mm Min-Z) below which objects generate bad noise, such as
	      when the arm and gripper are raised close to the camera.
    -->    
    <arg name="depth_width"  value="424"/>
    <arg name="depth_height" value="240"/>
    <arg name="color_width"  value="424"/>
    <arg name="color_height" value="240"/> 
    <arg name="depth_fps"    value="30"/>
    <arg name="color_fps"    value="30"/>
    
    </include>

<!-- Launch the depth_image_proc nodelet manager -->
  <node pkg="nodelet" type="nodelet" name="nodelet1"
        args="load depth_image_proc/point_cloud_xyz nodelet_manager">
    <remap from="camera_info"  to="/camera/depth/camera_info"/>
    <remap from="image_rect"   to="/filtered_depth_image"/>
    <remap from="points"       to="/pcl_depthmap"/>
  </node>

  <!-- <node pkg="nodelet" type="nodelet" name="nodelet2"
        args="load depth_image_proc/point_cloud_xyzrgb nodelet_manager">
    <remap from="rgb/camera_info"             to="/camera/depth/camera_info"/>
    <remap from="rgb/image_rect_color"        to="/filtered_image"/>
    <remap from="depth_registered/image_rect" to="/filtered_depth_image"/>
    <remap from="depth_registered/points"     to="/pcl2_from_gripper_camera"/>
  </node> -->

<!-- Set up octomap server with appropriate parameters  -->
 <node pkg="octomap_server" type="octomap_server_node" name="octomap_server">
   <!-- Resolution in meter for the map when starting an empty map -->
   <param name="resolution" value="0.05" />
   <!-- fixed map frame (set to 'map' if SLAM or localization running!) -->
   <param name="frame_id" type="string" value="odom" />
   <!-- fixed map frame (set to 'map' if SLAM or localization running!) -->
   <param name="base_frame_id" type="string" value="base_link" />
   <!-- maximum range to integrate (speedup!) -->
   <param name="sensor_model/max_range" value="2.0" />
   
   <!-- ground attributes -->
   <!-- <param name="ground_filter/distance"       value="0.04" />
   <param name="ground_filter/angle"          value="0.15" />
   <param name="ground_filter/plane_distance" value="0.3" /> -->
   <!-- Filter out ground -->
   <!-- <param name="filter_ground" value="true" /> -->
   
   <!-- data source to integrate (PointCloud2) -->
   <remap from="cloud_in" to="/head_camera/depth_downsample/points" />
   <!-- remap name of occupied_cells_vis_array  -->
   <!-- <remap from="occupied_cells_vis_array" to="filtered_pointcloud" /> -->
 </node>

</launch>
